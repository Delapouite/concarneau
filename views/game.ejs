<!doctype html>
<html>
<head>
    <script type="text/javascript">
    // If Facebook redirect hash is present remove it: https://stackoverflow.com/questions/7131909/facebook-callback-appends-to-return-url
    if (window.location.hash && window.location.hash == '#_=_') {
        if (window.history && history.pushState) {
            window.history.pushState("", document.title, window.location.pathname);
        } else {
            window.location.hash = '';
        }
    }
	</script>
    <title>Concarneau</title>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
    <style>
    	body 		{ padding-top:80px; }
    </style>
</head>
<body>
<div class="container">
	<div class="page-header text-center">
		<h1>Games</h1>
		<a href="/logout" class="btn btn-default btn-sm">Logout</a>
	</div>
	<div>
		<div><span>Your user ID: <%= user._id %></span></div>
		<div><span>Your friends' IDs: <%= user.friends.join(', ') %></span></div>
		<h3>Active games:</h3>
		<ul id="active-game-list">
			<% for (var i = 0; i < user.activeGames.length; i++) { %>
			<li onclick="socket.emit('load game', '<%= user.activeGames[i]._id %>')"><%= user.activeGames[i].name + ' (id: ' + user.activeGames[i]._id + ') ' + user.activeGames[i].placedTiles.length + ' tiles placed' %></li>
			<% } %>
		</ul>
		<div class="col-lg-4">
			<button class="btn btn-default btn-sm" onclick="socket.emit('new game')">New game</button>
			<button class="btn btn-default btn-sm" onclick="socket.emit('start game', currentGameID)">Start game</button>
			<div class="input-group">
				<input type="text" class="form-control" placeholder="User ID" id="change-name-input">
				<span class="input-group-btn">
					<button class="btn btn-default" type="button" onclick="socket.emit('set display name', $('#change-name-input').val())">Change display name</button>
				</span>
			</div>
			<div class="input-group">
				<input type="text" class="form-control" placeholder="User ID" id="add-friend-input">
				<span class="input-group-btn">
					<button class="btn btn-default" type="button" onclick="socket.emit('add friend', $('#add-friend-input').val())">Add friend</button>
				</span>
			</div>
			<div class="input-group">
				<input type="text" class="form-control" placeholder="User ID" id="remove-friend-input">
				<span class="input-group-btn">
					<button class="btn btn-default" type="button" onclick="socket.emit('remove friend', $('#remove-friend-input').val())">Remove friend</button>
				</span>
			</div>
			<div class="input-group">
				<input type="text" class="form-control" placeholder="User ID" id="add-to-game-input">
				<span class="input-group-btn">
					<button class="btn btn-default" type="button" onclick="socket.emit('add user to game', currentGameID, $('#add-to-game-input').val())">Add to game</button>
				</span>
			</div>
		</div>
	</div>
	<svg id="game-container" width="1000" height="600">
	<rect x="0" y="0" width="1000" height="600" fill="lightblue"></rect>
	</svg>
	<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.16/socket.io.min.js"></script>
	<script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.4.4/d3.min.js"></script>
	<script>
		//TODO: keep all this out of the global namespace
        var socket = io.connect('https://concarneau-c9-btouellette.c9.io');
        var currentGameID;

        var tileSize = 100;
        var svg = d3.select('#game-container');
        var svgHeight = $('#game-container').height();
        var svgWidth = $('#game-container').width();
        var placedTilesContainer = svg.append('g').attr({ id: 'placed-tiles' });
		var placementsContainer = svg.append('g').attr({ id: 'placements-container' });
        var activeTileContainer = svg.append('g').attr({ id: 'active-tile-container' });
        activeTileContainer.append('rect').attr({
            x: 0,
            y: 0,
            width: tileSize + 10,
            height: tileSize + 10,
            fill: 'white'
        }).on('click', function (d) {
			$('#active-tile-image').attr({ x: $(this).attr('x') + 5, y: $(this).attr('y') + 5 })
		});;
        
        socket.on('sending gamestate', function(gamestate) {
        	console.log(JSON.stringify(gamestate));
        	currentGameID = gamestate._id;
        	draw(gamestate);
    	});

        function draw(gamestate) {
            // draw all the placed tiles
            placedTilesContainer.selectAll('image').data(gamestate.placedTiles).enter().append('image').attr({
                x: function(d) { return svgWidth / 2 + d.x * tileSize; },
                y: function(d) { return svgHeight / 2 + d.y * tileSize; },
                width: tileSize,
                height: tileSize,
                'xlink:href': function(d) { return d.tile.imageURL; },
                transform: function(d) { return 'rotate(' + 90 * d.rotation + ', ' + (svgWidth / 2 + d.x * tileSize + tileSize / 2) + ', ' + (svgHeight / 2 + d.y * tileSize + tileSize / 2) + ')'; }
            });
            
            activeTileContainer.selectAll('image').data([gamestate.activeTile]).enter().append('image').attr({
            	id: 'active-tile-image',
                'xlink:href': function(d) { console.log(d.tile.imageURL); return d.tile.imageURL; },
				x: 5,
				y: 5,
                width: tileSize,
                height: tileSize
            });
			//TODO: show discarded tiles being tossed
			
			placementsContainer.selectAll('rect').data(gamestate.activeTile.validPlacements).enter().append('rect').attr({
				x: function(d) { return svgWidth / 2 + d.x * tileSize; },
                y: function(d) { return svgHeight / 2 + d.y * tileSize; },
                width: tileSize,
                height: tileSize,
				fill: 'lightgray'
			}).on('click', function (d) {
				$('#active-tile-image').attr({ x: $(this).attr('x'), y: $(this).attr('y') });
				//TODO: apply first valid rotation, click to go through rotations
			});
        }
    </script>
</div>
</body>
</html>